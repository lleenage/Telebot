import sqlalchemy
from sqlalchemy.orm import sessionmaker
from sql_func import User, Personal_words, Basic_words, create_tables
import telebot
from telebot import types
from telebot.handler_backends import StatesGroup, State
import random
from private.confirm import TOKEN_TELEBOT

DSN = f"postgresql://postgres:2709200227092002@localhost:5432/translation"
engine = sqlalchemy.create_engine(DSN)
create_tables(engine)

session = (sessionmaker(bind=engine))()

personal_russian_words = []   #—Å–ø–∏—Å–æ–∫ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ä—É—Å—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
personal_english_words = []   #—Å–ø–∏—Å–æ–∫ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
english_cards = []  #—Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
russian_cards = []  #—Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ —Ä—É—Å—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫


#–§—É–Ω–∫–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤
def get_target_word(translate_word: str) -> str:
    if translate_word in basic_russian_words:
        target_w = session.query(Basic_words.english_word).filter(Basic_words.russian_word == translate_word).all()[0][0]
        return target_w
    elif translate_word in basic_english_words:
        target_w = session.query(Basic_words.russian_word).filter(Basic_words.english_word == translate_word).all()[0][0]
        return target_w
    elif translate_word in personal_english_words:
        target_w = session.query(Personal_words.russian_word).filter(Personal_words.english_word == translate_word).all()[0][0]
        return target_w
    elif translate_word in personal_russian_words:
        target_w = session.query(Personal_words.english_word).filter(Personal_words.russian_word == translate_word).all()[0][0]
        return target_w
    else:
        return '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞'
#–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_users(user_id: int, user_name: str):   #—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ user_id, user_name
    session.add(User(user_id=user_id, name=user_name))
    for i in session.query(User).all():
        print(i)
    session.commit()
#–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def add_personal_word(any_russian_word: str, any_english_word: str, uid: int) -> str: #—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤ –≤ –±–¥
    for u_id in session.query(User.id).filter(User.user_id == uid).all():
        if any_russian_word not in session.query(Personal_words.russian_word).all():
            session.add(Personal_words(russian_word=any_russian_word, english_word=any_english_word, user_id=u_id[0]))
            session.commit()
            for i in session.query(Personal_words).filter(Personal_words.russian_word == any_russian_word).all():
                result = f'{i.russian_word} - {i.english_word}'
                personal_russian_words.append(any_russian_word)
                russian_cards.append(any_russian_word)
                personal_english_words.append(any_english_word)
                english_cards.append(any_english_word)
                return f'"{result}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.'
        else:
            return f'–°–ª–æ–≤–æ "{any_russian_word}" —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ'
#–§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def delete_word(del_word: str, uid: int) -> int:
    for id_ in session.query(User.id).filter(User.user_id == uid).all():
        id_ = id_[0]
        if del_word in basic_english_words or del_word in basic_russian_words:
            print(f'–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ "{del_word}", —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–∑–æ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö.')
            return 0
        elif del_word in personal_russian_words:
            session.query(Personal_words).filter(Personal_words.russian_word == del_word).filter(Personal_words.user_id==id_).delete() # —É–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç
            session.commit()
            del_eng_word = get_target_word(del_word)
            personal_russian_words.remove(del_word)
            personal_english_words.remove(del_eng_word)
            english_cards.remove(del_eng_word)
            russian_cards.remove(del_word)
            print(f'–£–¥–∞–ª–∏–ª–∏ —Å–ª–æ–≤–æ "{del_word}" –∏–∑ –±–¥')
            return session.query(Personal_words).filter(Personal_words.user_id==id_).all()[0]
        elif del_word in personal_english_words:
            session.query(Personal_words).filter(Personal_words.english_word == del_word).filter(Personal_words.user_id==id_).delete() # —É–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç
            session.commit()
            del_russ_word = get_target_word(del_word)
            personal_english_words.remove(del_word)
            personal_russian_words.remove(del_russ_word)
            english_cards.remove(del_word)
            russian_cards.remove(del_russ_word)
            print(f'–£–¥–∞–ª–∏–ª–∏ —Å–ª–æ–≤–æ "{del_word}" –∏–∑ –±–¥')
            return session.query(Personal_words).filter(Personal_words.user_id==id_).all()[0]
        else:
            print(f'–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ "{del_word}", –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –±–¥.')
            return 1
#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö —Å–ª–æ–≤
def add_basic_word(russian_word: str, english_word: str): #–¥–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ 10 —Å–ª–æ–≤
    session.add(Basic_words(russian_word=russian_word, english_word=english_word))
    session.commit()

add_basic_word('–ú–∞—Å–ª–æ', 'Oil')
add_basic_word('–ú–∞–≥–∞–∑–∏–Ω', 'Shop')
add_basic_word('–°–æ–±–∞–∫–∞', 'Dog')
add_basic_word('–í–µ—Å–Ω–∞', 'Spring')
add_basic_word('–î–æ–º', 'House')
add_basic_word('–í–æ–¥–∞', 'Water')
add_basic_word('–ò–º—è', 'Name')
add_basic_word('–î–æ—Ä–æ–≥–∞', 'Road')
add_basic_word('–†—É–∫–∞', 'Arm')
add_basic_word('–û–¥–µ–∂–¥–∞', 'Clothes')

session.close()


telebot_token = TOKEN_TELEBOT
bot = telebot.TeleBot(telebot_token)

buttons = []
known_users = []

class Commands:
    add = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûïüÜï'
    delete = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô'
    next = '–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ ‚è≠'

class MyStates(StatesGroup):
    target_word = State()
    translate_word = State()
    other_words = State()


@bot.message_handler(commands=['start'])   #–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –∫–æ–º–Ω–¥–∞ "start"
def send_welcome(message):
    user_id = message.from_user.id
    user_name = message.chat.username
    if user_id not in known_users:
        known_users.extend([user_name, user_id])
        add_users(user_id, user_name) #–¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
        bot.send_message(user_id, f'''–ü—Ä–∏–≤–µ—Ç, {user_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–æ—Ç!
                                    \n–û—Ç–ø—Ä–∞–≤—å /help –∏ –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏!''')


@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, '''–ï—Å–ª–∏ —Ç–µ–±–µ —Å–ª–æ–∂–Ω–æ –¥–∞–µ—Ç—Å—è –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤, —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É!
                                      \n–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –æ–±—É—á–µ–Ω–∏—è. –¢–µ–±–µ –±—É–¥—É—Ç –¥–∞–Ω—ã 10 –±–∞–∑–æ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∏—Ö –∏–∑—É—á–µ–Ω–∏—è.
                                      \n–¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –æ–±—É—á–µ–Ω–∏–µ –±—ã–ª–æ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.(–ë–∞–∑–æ–≤—ã–µ —Å–ª–æ–≤–∞ —É–¥–∞–ª–µ–Ω–∏—é –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç.)\n
                                      \n–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n
                                      \n/cards - –ú–∏–Ω–∏ –∏–≥—Ä–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤ –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫.
                                      \n"–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûïüÜï" - –ø–æ–∑–≤–æ–ª–∏—Ç –¥–æ–±–∞–≤—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è.
                                      \n"–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô" - –ø–æ–∑–≤–æ–ª–∏—Ç —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–ª–æ–≤–æ. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É–¥–∞–ª—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –¥–æ–±–∞–≤–ª—è–ª–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.''')


@bot.message_handler(commands=['cards'])    #—Å–æ–º–∞–Ω–¥–∞ "cards"
def buttons_card(message):
    chat_id = message.chat.id
    #–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –º–∏–Ω–∏–º—É–º–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤(4)
    random_words = random.sample(english_cards, 4)
    # words = random.sample(english_cards, 4)

    if not random_words or len(random_words) < 4:
        bot.send_message(chat_id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫!\n–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —á–µ—Ä–µ–∑ "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûïüÜï".')
        print('–°–ª–æ–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫.')
    else:
        global buttons
        buttons = []
        markup = types.ReplyKeyboardMarkup(row_width=2)
        translate_word = random.choice(russian_cards)
        target_word = get_target_word(translate_word)
        other_words = random.sample(english_cards, 3)

        target_word_button = types.KeyboardButton(target_word)
        other_words_buttons = [types.KeyboardButton(word) for word in other_words]

        buttons = [target_word_button] + other_words_buttons
        random.shuffle(buttons)

        add_btn = types.KeyboardButton(Commands.add)
        delete_btn = types.KeyboardButton(Commands.delete)
        next_btn = types.KeyboardButton(Commands.next)
        buttons.extend([add_btn, delete_btn, next_btn])

        markup.add(*buttons)

        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏ –≤–µ—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ä—É—Å—Å–∫–æ–≥–æ —Å–ª–æ–≤–∞ "{translate_word}".', reply_markup=markup)

        bot.set_state(message.from_user.id, MyStates.target_word, message.chat.id)
        with bot.retrieve_data(message.from_user.id,  message.chat.id) as data:
            data['translate_word'] = translate_word
            data['target_word'] = target_word
            data['other_words'] = other_words


@bot.message_handler(func=lambda message: message.text == Commands.add, content_types=['text'])
def add_word(message):
    print('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ')
    user_name = message.chat.username
    if user_name not in known_users:
        print('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π e—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª "/start"')
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é /start')
    else:
        bot.send_message(message.chat.id, '''–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûïüÜï".
                            \n–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
                            \n–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: "–ú–∞—à–∏–Ω–∞"''')
        bot.register_next_step_handler(message, get_russ_word)
def get_russ_word(message):
    print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Å–ª–æ–≤–æ', message.text)
    global add_russian_word
    add_russian_word = message.text
    bot.send_message(message.chat.id, f'''–ü—Ä–æ–¥–æ–ª–∂–∏–º.
        \n–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ "{add_russian_word}" –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
        \n–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: "Car"''')
    bot.register_next_step_handler(message, get_eng_word)
def get_eng_word(message):
    print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Å–ª–æ–≤–æ', message.text)
    add_english_word = message.text
    user_id = message.from_user.id
    if add_russian_word not in personal_russian_words and add_english_word not in personal_english_words:
        print(add_personal_word(add_russian_word, add_english_word, user_id))
        bot.send_message(message.chat.id, f'–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å–ª–æ–≤–æ "{add_russian_word}" —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º "{add_english_word}" ‚úÖ')
    else:
        bot.send_message(message.chat.id,
                         f'–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ, –≤–æ–∑–º–æ–∂–Ω–æ —Å–ª–æ–≤–æ "{add_russian_word}" —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ.')
        print(f'–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–ª–æ–≤–æ "{add_russian_word}"')

@bot.message_handler(func=lambda message: message.text == Commands.next, content_types=['text'])
def next_card(message):
    buttons_card(message)


@bot.message_handler(func=lambda message: message.text == Commands.delete, content_types=['text'])
def del_word(message):
    print('–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ.')
    user_name = message.chat.username
    if user_name not in known_users:
        print('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π e—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª "/start"')
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é /start')
    else:
        bot.send_message(message.chat.id, '''–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô". 
                    \n–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∏–ª–∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.
                    \n–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: "M–∞—à–∏–Ω–∞" –∏–ª–∏ "Car"''')
        bot.register_next_step_handler(message, get_del_word)
def get_del_word(message):
    delate_word = message.text
    uid = message.from_user.id
    # try:
    if delete_word(delate_word, uid) is str:
        bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{delate_word}" –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.')
    elif delete_word(delate_word, uid) == 0:
        bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{delate_word}" –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ, –æ–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—â–µ–º –¥–æ—Å—Ç—É–ø–µ.')
    elif delete_word(delate_word, uid) == 1:
        bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{delate_word}" –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –µ–≥–æ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏.')
    # except:
    #     print('–û—à–∏–±–∫–∞')

@bot.message_handler(func=lambda message: True, content_types=['text'])
def message_reply(message):
    with bot.retrieve_data(message.from_user.id,  message.chat.id) as data:
        target_word = data['target_word']
        if message.text == target_word:
            bot.send_message(message.chat.id, '–í–µ—Ä–Ω–æ!‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —Ö–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–∏–ª—Å—è!')

        elif message.text != target_word and message.text not in [Commands.next, Commands.delete, Commands.add]:
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞.‚ùå –ù–µ —Å–¥–∞–≤–∞–π—Å—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!')

basic_russian_words = [i.russian_word for i in (sessionmaker(bind=engine))().query(Basic_words).all()] #—Å–ø–∏—Å–æ–∫ —Å –±–∞–∑–æ–≤—ã–º–∏ —Ä—É—Å—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
basic_english_words = [i.english_word for i in (sessionmaker(bind=engine))().query(Basic_words).all()] #—Å–ø–∏—Å–æ–∫ —Å –±–∞–∑–æ–≤—ã–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏


if __name__ == '__main__':
    add_russian_word = ['–ú–∞—Å–ª–æ', '–ú–∞–≥–∞–∑–∏–Ω', '–°–æ–±–∞–∫–∞', '–í–µ—Å–Ω–∞', '–î–æ–º', '–í–æ–¥–∞', '–ò–º—è', '–î–æ—Ä–æ–≥–∞', '–†—É–∫–∞', '–û–¥–µ–∂–¥–∞']
    add_english_word = ['Oil', 'Shop', 'Dog', 'Spring', 'House', 'Water', 'Name', 'Road', 'Arm', 'Clothes']

    for r in add_russian_word:
        russian_cards.append(r)
    for e in add_english_word:
        english_cards.append(e)

    print('Bot is running')
    bot.polling()